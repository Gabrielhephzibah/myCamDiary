apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.enyata.camdiary"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", '"https://stagingcamuserapi.enyata.com/v1"')
            buildConfigField("String", "INVENTORY_BASE_URL", '"https://stagingcaminventoryapi.enyata.com/api/v1"')
            buildConfigField("String", "TRANSACTION_BASE_URL", '"https://stagingcamtransactionapi.enyata.com/api/v1"')
            buildConfigField("String", "API_KEY", '"http://www.mocky.io/v2"')
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", '"http://www.mocky.io/v2"')
            buildConfigField("String", "API_KEY", '"http://www.mocky.io/v2"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android support libraries
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardViewVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.vectordrawable:vectordrawable:$rootProject.vectorDrawableVersion"
    implementation "androidx.vectordrawable:vectordrawable-animated:$rootProject.animatedVectorDrawableVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation "androidx.cardview:cardview:1.0.0"


    // network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"
    // database
    implementation "androidx.room:room-rxjava2:$rootProject.roomDatabaseVersion"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.room:room-runtime:$rootProject.roomDatabaseVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomDatabaseVersion"

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // image
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // fancy alert
    implementation 'com.github.Shashank02051997:FancyToast-Android:0.1.6'

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // debug database
    debugImplementation "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // swipe view
    implementation "com.mindorks:placeholderview:$rootProject.placeholderviewVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"


    // view model
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"

    //retrofit

    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.google.code.gson:gson:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation("com.squareup.okhttp3:logging-interceptor:3.9.0")

    //test dependencies
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    //hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    //ui testing with espressor
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"

    //UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    testImplementation 'androidx.test:core:1.0.0'

    // google vision library
    implementation 'com.google.android.gms:play-services-vision:11.0.2'

    //zxing
    implementation 'com.google.zxing:core:3.2.0'

    implementation 'me.dm7.barcodescanner:zxing:1.9'

    //picassso
    implementation "com.squareup.picasso:picasso:$rootProject.picasso"

    implementation 'com.shreyaspatil:MaterialDialog:2.1'

    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.crowdfire.cfalertdialog:cfalertdialog:1.1.0'


    implementation group: 'com.cloudinary', name: 'cloudinary-android', version: '1.26.0'

    //decode token
    implementation 'com.auth0.android:jwtdecode:1.1.1'
    // Robolectric

    testImplementation "org.robolectric:robolectric:4.3.1"

//    testImplementation 'org.robolectric:robolectric:4.3'


}


configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}
